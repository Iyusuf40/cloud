version: 2.1

jobs:

  # running commands on a basic image
  Hello-World:
    parameters:
      fingerprint:
        type: string
        default: d5:ff:ce:90:1f:ba:cd:39:8a:86:5e:77:88:ae:7f:9a
    docker:
      - image: cimg/base:2021.04

    steps:
      - checkout
      - run:
          name: Saying Hello
          command: |
            echo 'Hello World!'
            echo 'This is the delivery pipeline'
            # xeyes
            echo 'yay! error command commented out'
            echo << parameters.fingerprint >>
            mkdir test_cache
            echo "I am file in test_cache" > test_cache/c_file
            ls
      - save_cache:
          name: testing-cache
          key: text_files-{{ epoch }}
          paths:
            - ansible_test
  # fetching code from the repo
  Fetch-Code:
    docker:
      - image: cimg/base:2021.04

    steps:
      - checkout
      - restore_cache: # remember to use the same image as the one used
          # used in creating the cache 
          name: restoring saved cache from Hello-world job
          keys:
            - text_files-
      - run:
          name: Getting the Code
          command: |
            ls -al
            echo '^^^Your repo files^^^'
            echo "checking if cache is restored"
            pwd
            ls ansible_test

  Test_aws_cli:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: testing aws cli from circleci
          command: |
            # aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            # aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            # aws configure set aws_session_token ""
            # It works fine
            cd test_circleci
            ./create.sh

  Configure-with-ansible:
    parameters:
      fingerprint:
        type: string
        default: d5:ff:ce:90:1f:ba:cd:39:8a:86:5e:77:88:ae:7f:9a
    docker:
      - image: python:3.7-alpine3.11

    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: [<< parameters.fingerprint >>]
      - run:
          name: install ansible
          command: apk add --update ansible
      
      - run:
          name: Configuartion
          command: |
            cd test_circleci
            ./create_inventory.sh
            ansible-playbook ans_main.yaml -i inventory
            ip=$(grep '^[0-9]$*' inventory)
            echo $ip
            aws cloudformation describe-stacks --region us-west-2

workflows:
  Example-Workflow:
    jobs:
      - Hello-World
      - Fetch-Code:
          requires:
            - Hello-World

      - Test_aws_cli:
          requires:
            - Using-Node

      - Now-Complete:
          requires:
            # - Hold-for-Approval
            - Test_aws_cli